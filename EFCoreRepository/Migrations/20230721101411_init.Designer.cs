// <auto-generated />
using System;
using EFCoreRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFCoreRepository.Migrations
{
    [DbContext(typeof(EFCoreDbContext))]
    [Migration("20230721101411_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFCoreRepository.Models.EFUserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<decimal>("CardBalance")
                        .HasColumnType("numeric");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CardBalance = 0m,
                            FullName = "Pavlo"
                        },
                        new
                        {
                            UserId = 2,
                            CardBalance = 0m,
                            FullName = "JPMorgan"
                        });
                });

            modelBuilder.Entity("EFCoreRepository.Models.EfTransactionModel", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransactionId"));

                    b.Property<string>("IconPath")
                        .HasColumnType("text");

                    b.Property<decimal>("TransactionAmount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TransactionDescription")
                        .HasColumnType("text");

                    b.Property<string>("TransactionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TransactionStatus")
                        .HasColumnType("integer");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer");

                    b.Property<string>("UserFrom")
                        .HasColumnType("text");

                    b.Property<int>("UserOwnerId")
                        .HasColumnType("integer");

                    b.HasKey("TransactionId");

                    b.HasIndex("UserOwnerId");

                    b.ToTable("Transaction");

                    b.HasData(
                        new
                        {
                            TransactionId = 1,
                            IconPath = "https://localhost:7046/img/apple.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2023, 7, 20, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(5933),
                            TransactionDescription = "Card Number Used",
                            TransactionName = "Apple",
                            TransactionStatus = 1,
                            TransactionType = 1,
                            UserFrom = "Diana",
                            UserOwnerId = 1
                        },
                        new
                        {
                            TransactionId = 2,
                            IconPath = "https://localhost:7046/img/apple-general.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2023, 7, 21, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(5996),
                            TransactionDescription = "Chase Bank Natio...",
                            TransactionName = "Payment",
                            TransactionStatus = 0,
                            TransactionType = 1,
                            UserFrom = "JPMorgan",
                            UserOwnerId = 1
                        },
                        new
                        {
                            TransactionId = 3,
                            IconPath = "https://localhost:7046/img/apple.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2023, 7, 21, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(5999),
                            TransactionDescription = "Card Number Used",
                            TransactionName = "Apple",
                            TransactionStatus = 0,
                            TransactionType = 1,
                            UserFrom = "",
                            UserOwnerId = 1
                        },
                        new
                        {
                            TransactionId = 4,
                            IconPath = "https://localhost:7046/img/apple-general.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2023, 7, 20, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(6003),
                            TransactionDescription = "Chase Bank Natio...",
                            TransactionName = "Payment",
                            TransactionStatus = 0,
                            TransactionType = 1,
                            UserFrom = "JPMorgan",
                            UserOwnerId = 1
                        },
                        new
                        {
                            TransactionId = 5,
                            IconPath = "https://localhost:7046/img/apple-general.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2023, 7, 20, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(6006),
                            TransactionDescription = "Chase Bank Natio...",
                            TransactionName = "Payment",
                            TransactionStatus = 0,
                            TransactionType = 1,
                            UserFrom = "JPMorgan",
                            UserOwnerId = 1
                        },
                        new
                        {
                            TransactionId = 6,
                            IconPath = "https://localhost:7046/img/ikea.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2022, 7, 21, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(6011),
                            TransactionDescription = "Round Rock, Tx",
                            TransactionName = "IKEA",
                            TransactionStatus = 0,
                            TransactionType = 1,
                            UserFrom = "",
                            UserOwnerId = 1
                        },
                        new
                        {
                            TransactionId = 7,
                            IconPath = "https://localhost:7046/img/target.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2023, 7, 20, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(6017),
                            TransactionDescription = "Cedar Park, TX",
                            TransactionName = "Target",
                            TransactionStatus = 0,
                            TransactionType = 1,
                            UserFrom = "",
                            UserOwnerId = 1
                        },
                        new
                        {
                            TransactionId = 8,
                            IconPath = "https://localhost:7046/img/apple-general.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2023, 7, 20, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(6022),
                            TransactionDescription = "Card Number Used",
                            TransactionName = "Apple",
                            TransactionStatus = 0,
                            TransactionType = 1,
                            UserFrom = "Diana",
                            UserOwnerId = 1
                        },
                        new
                        {
                            TransactionId = 9,
                            IconPath = "https://localhost:7046/img/apple-general.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2023, 7, 20, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(6025),
                            TransactionDescription = "Card Number Used",
                            TransactionName = "Apple",
                            TransactionStatus = 0,
                            TransactionType = 1,
                            UserFrom = "Diana",
                            UserOwnerId = 1
                        },
                        new
                        {
                            TransactionId = 10,
                            IconPath = "https://localhost:7046/img/apple-general.png",
                            TransactionAmount = 14.06m,
                            TransactionDate = new DateTime(2023, 7, 20, 13, 14, 11, 592, DateTimeKind.Local).AddTicks(6029),
                            TransactionDescription = "Card Number Used",
                            TransactionName = "Apple",
                            TransactionStatus = 0,
                            TransactionType = 1,
                            UserFrom = "Diana",
                            UserOwnerId = 1
                        });
                });

            modelBuilder.Entity("EFCoreRepository.Models.EfTransactionModel", b =>
                {
                    b.HasOne("EFCoreRepository.Models.EFUserModel", "User")
                        .WithMany()
                        .HasForeignKey("UserOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
